<ContentSection @title="Formats" as |content|>
  <content.P>
    It's not just strings that you can store - the <code class="inline-code">trackedInLocalStorage</code>
    decorator accepts a <code class="inline-code">format</code> parameter which you can pass one of the following options depending
    on the data type matching the decorated property:
    <ul class="list-disc pl-12 mt-4">
      <li><code class="inline-code">'string'</code> (default value)</li>
      <li><code class="inline-code">'boolean'</code></li>
      <li><code class="inline-code">'object'</code></li>
      <li><code class="inline-code">'array'</code></li>
      <li><code class="inline-code">'number'</code></li>
      <li><code class="inline-code">'integer'</code></li>
    </ul>
  </content.P>

  <content.P>
    For example, to store an object:
  </content.P>

  <content.Code
    @code="@trackedInLocalStorage({ format: 'object' }) localStorageObject;"
    @language="javascript"
  />

  <content.P>
    This is required as the browser's local storage can only accept strings, so the decorator will stringify the value when
    storing it, then normalize it back to the stated type when retrieving it.
  </content.P>
</ContentSection>
